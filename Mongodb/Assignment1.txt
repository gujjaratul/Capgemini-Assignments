Assignment-1

1) db.movies.find().pretty()
2) db.moives.find(“writer”:”Quentin Tarantino”).pretty()
3) db.movies.find(“actor”:”Brad Pitt”).pretty()
4) db.movies.find({‘franchise’:’The Hobbit}’).pretty()
5) db.movies.find({‘year’:{$lt:2000}}).pretty()
6) db.movies.find({$or:[{‘year’:{$gt:2010}},{‘year’:{$lt:2000}}]}).pretty()

Update document
1) db.movies.update({"title" : " The Hobbit- An Unexpected Journey "},{$set:{"synopsis":"A reluctant hobbit,Bilbo Baggins,sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain with a spirited group -and the gold within it -from the dragon Smaug"}})
2) db.movies.update({"title":"The Hobbit-The Desolation of Suag"},{$set:{"synopsis":"The dwarves,along with Bilbo Baggins and Gandalf the Grey,continue their quest to reclaim Erebor,their homeland,from Smaug.Bilbo Baggins is in possession of a mysterious and magical ring"}})
3)db.movies.update({“title”:”Pulp Fiction”},{$push :{actor:”Samuel L.Jackson”}})

Text Search
1)db.movies.find({synopsis:/Bilbo/})
2)db.movies.find({synopsis:/Gandalf/}).pretty()
3) db.movies.find({$and:[{synopsis: /Bilbo/},{synopsis:{$not: /Gandalf/}}]}).pretty()
4) db.movies.find({$or:[{synopsis: /dwarves/},{synopsis: /hobbit/}]}).pretty() 
5) db.movies.find({$and:[{synopsis: /gold/},{synopsis: /dragon/}]}).pretty()

Delete documents
1) db.movies.remove({title:"Pee Wee Herman's Big Adventure"})
2) db.movies.remove({title:"Avatar"})

Query related collections
1) db.users.find({}).pretty()
2) db.posts.find({}).pretty()
3) db.posts.find({username: 'GoodGuyGreg'}).pretty()
4) db.posts.find({username: 'ScumbagSteve'}).pretty()
5) db.comments.find({}).pretty()
6) db.comments.find({username: 'GoodGuyGreg'}).pretty()
7) db.comments.find({username: 'ScumbagSteve'}).pretty()
8) db.comments.find({post: db.posts.findOne({title: "Reports a bug in your code"})._id})

